// Mocks generated by Mockito 5.2.0 from annotations
// in number_trivia_app_v2/test/presentation/state_holders/mocks/generate_mock_input_converter.dart.
// Do not manually edit this file.

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:number_trivia_app_v2/core/errors/failures.dart' as _i4;
import 'package:number_trivia_app_v2/core/utils/input_converter.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [InputConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputConverter extends _i1.Mock implements _i3.InputConverter {
  MockInputConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i4.Failure, int> stringToUnsignedInt({String? stringValue}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #stringToUnsignedInt, [], {#stringValue: stringValue}),
              returnValue: _FakeEither_0<_i4.Failure, int>())
          as _i2.Either<_i4.Failure, int>);
}
